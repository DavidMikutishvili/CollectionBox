{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/product.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACL;AACT;;;;;;;ICYpB,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAY;IAAA,4DAAK;IACrB,qEACI;IAAA,4EAAgE;IAAzB,oaAAwB;IAAC,2GAAQ;IAAA,4DAAS;IACjF,4EAA0D;IAApB,iaAAmB;IAAC,sGAAO;IAAA,4DAAS;IAC9E,4DAAK;;;IAND,0DAAW;IAAX,gGAAW;IACX,0DAAc;IAAd,mGAAc;IACd,0DAAY;IAAZ,iGAAY;;;IAJxB,qEACI;IAAA,uIACI;IAQR,4DAAK;;;;;IATY,0DAA4B;IAA5B,gIAA4B;;;IAXrD,2EACI;IAAA,wEACI;IAAA,qEACI;IAAA,qEAAI;IAAA,+FAAM;IAAA,4DAAK;IACf,qEAAI;IAAA,yIAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,mFAAI;IAAA,4DAAK;IACb,gEAAS;IACb,4DAAK;IACT,4DAAQ;IACR,yEACI;IAAA,gHACI;IAUR,4DAAQ;IACZ,4DAAQ;;;IAZI,2DAA0B;IAA1B,oFAA0B;;;;IAelC,qEACI;IAAA,2EACJ;IADuB,0VAA0B;IAA7C,4DACJ;IAAA,4DAAK;IACL,qEACI;IAAA,2EACJ;IADuB,6VAA6B;IAAhD,4DACJ;IAAA,4DAAK;IACL,qEACI;IAAA,4EACJ;IADyB,2VAA2B;IAAhD,4DACJ;IAAA,4DAAK;IACL,qEACI;IAAA,4EACA;IADuC,qTAAgB;IAAvD,4DACA;IAAA,4EACJ;IADwC,uTAAkB;IAAtD,4DACJ;IAAA,4DAAK;;;IAXkB,0DAA0B;IAA1B,wFAA0B;IAG1B,0DAA6B;IAA7B,2FAA6B;IAG3B,0DAA2B;IAA3B,yFAA2B;;;;IASpD,0EACI;IAAA,wEAAO;IAAA,+FAAM;IAAA,4DAAQ;IACrB,2EACJ;IADuB,0VAA0B;IAA7C,4DACJ;IAAA,4DAAM;IACN,0EACI;IAAA,wEAAO;IAAA,yIAAa;IAAA,4DAAQ;IAC5B,2EACJ;IADuB,6VAA6B;IAAhD,4DACJ;IAAA,4DAAM;IACN,0EACI;IAAA,wEAAO;IAAA,oFAAI;IAAA,4DAAQ;IACnB,6EACJ;IADyB,4VAA2B;IAAhD,4DACJ;IAAA,4DAAM;IACN,uEACI;IAAA,6EACA;IADuC,sTAAgB;IAAvD,4DACA;IAAA,6EACJ;IADwC,wTAAkB;IAAtD,4DACJ;IAAA,4DAAM;;;IAbiB,0DAA0B;IAA1B,wFAA0B;IAI1B,0DAA6B;IAA7B,2FAA6B;IAI3B,0DAA2B;IAA3B,yFAA2B;;AD5CjD,MAAM,YAAY;IAMrB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ5C,YAAO,GAAY,IAAI,gDAAO,EAAE,CAAC;QAEjC,cAAS,GAAY,IAAI,CAAC;IAEsB,CAAC;IAEjD,QAAQ;QACJ,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IACD,YAAY;QACR,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aACzB,SAAS,CAAC,CAAC,IAAe,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;IAC9D,CAAC;IACD,IAAI;QACA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;iBACvC,SAAS,CAAC,CAAC,IAAa,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC/D;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;iBACvC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IACD,WAAW,CAAC,CAAU;QAClB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,MAAM;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,gDAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IACD,MAAM,CAAC,CAAU;QACb,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;aAC/B,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAChD,CAAC;IACD,GAAG;QACC,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;;wEAvCQ,YAAY;4FAAZ,YAAY,oGAFV,CAAC,yDAAW,CAAC;QCP5B,qEAAI;QAAA,0IAAc;QAAA,4DAAK;QACvB,2EACA;QAD8D,mIAAS,SAAK,IAAC;QAA7E,4DACA;QAAA,6GACI;QAuBJ,oMACI;QAeJ,qMACI;;;QAzCG,0DAA8B;QAA9B,+EAA8B;;6FDOxB,YAAY;cALxB,uDAAS;eAAC;gBACP,QAAQ,EAAE,KAAK;gBACf,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,yDAAW,CAAC;aAC3B;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACiB;AACb;AACW;AACT;;AAOxC,MAAM,SAAS;;wFAAT,SAAS,cAFN,2DAAY;4IAEf,SAAS,kBAJT,CAAC,uEAAa,EAAE,0DAAW,EAAE,qEAAgB,CAAC;mIAI9C,SAAS,mBAHH,2DAAY,aADjB,uEAAa,EAAE,0DAAW,EAAE,qEAAgB;6FAI7C,SAAS;cALrB,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,uEAAa,EAAE,0DAAW,EAAE,qEAAgB,CAAC;gBACvD,YAAY,EAAE,CAAC,2DAAY,CAAC;gBAC5B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC5B;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAA2C;;;AAKpC,MAAM,WAAW;IAIpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,yCAAyC,CAAC;IAGxD,CAAC;IAED,WAAW;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,aAAa,CAAC,OAAgB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IACD,aAAa,CAAC,OAAgB;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IACD,aAAa,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IACjD,CAAC;;sEAxBQ,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cADvB,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAO,MAAM,OAAO;IAChB,YACW,EAAW,EACX,IAAa,EACb,OAAgB,EAChB,KAAc;QAHd,OAAE,GAAF,EAAE,CAAS;QACX,SAAI,GAAJ,IAAI,CAAS;QACb,YAAO,GAAP,OAAO,CAAS;QAChB,UAAK,GAAL,KAAK,CAAS;IAAI,CAAC;CACjC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2E;AAC5B;AACF;AAE7C,oEAAc,EAAE,CAAC;AACjB,MAAM,QAAQ,GAAG,gGAAsB,EAAE,CAAC;AAC1C,QAAQ,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Product } from './product';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    providers: [DataService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    product: Product = new Product();   \r\n    products: Product[];                \r\n    tableMode: boolean = true;          \r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadProducts();     \r\n    }\r\n    loadProducts() {\r\n        this.dataService.getProducts()\r\n            .subscribe((data: Product[]) => this.products = data);\r\n    }\r\n    save() {\r\n        if (this.product.id == null) {\r\n            this.dataService.createProduct(this.product)\r\n                .subscribe((data: Product) => this.products.push(data));\r\n        } else {\r\n            this.dataService.updateProduct(this.product)\r\n                .subscribe(data => this.loadProducts());\r\n        }\r\n        this.cancel();\r\n    }\r\n    editProduct(p: Product) {\r\n        this.product = p;\r\n    }\r\n    cancel() {\r\n        this.product = new Product();\r\n        this.tableMode = true;\r\n    }\r\n    delete(p: Product) {\r\n        this.dataService.deleteProduct(p.id)\r\n            .subscribe(data => this.loadProducts());\r\n    }\r\n    add() {\r\n        this.cancel();\r\n        this.tableMode = false;\r\n    }\r\n}","<h1>Список моделей</h1>\r\n<input type=\"button\" value=\"Добавить\" class=\"btn btn-default\" (click)=\"add()\" />\r\n<table *ngIf=\"tableMode; else create\" class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>Модель</td>\r\n            <td>Производитель</td>\r\n            <td>Цена</td>\r\n            <td></td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let p of products\">\r\n            <ng-template [ngIf]=\"product?.id != p.id\" [ngIfElse]=\"edit\">\r\n                <td>{{p?.name}}</td>\r\n                <td>{{p?.company}}</td>\r\n                <td>{{p?.price}}</td>\r\n                <td>\r\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"editProduct(p)\">Изменить</button>\r\n                    <button class=\"btn btn-sm btn-danger\" (click)=\"delete(p)\">Удалить</button>\r\n                </td>\r\n            </ng-template>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<ng-template #edit>\r\n    <td>\r\n        <input type=\"text\" [(ngModel)]=\"product.name\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"text\" [(ngModel)]=\"product.company\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"number\" [(ngModel)]=\"product.price\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-sm btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-sm btn-warning\" />\r\n    </td>\r\n</ng-template>\r\n\r\n<ng-template #create>\r\n    <div class=\"form-group\">\r\n        <label>Модель</label>\r\n        <input type=\"text\" [(ngModel)]=\"product.name\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Производитель</label>\r\n        <input type=\"text\" [(ngModel)]=\"product.company\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Цена</label>\r\n        <input type=\"number\" [(ngModel)]=\"product.price\" class=\"form-control\" />\r\n    </div>\r\n    <div>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-warning\" />\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, HttpClientModule],\r\n    declarations: [AppComponent],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from './product';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    private url = \"https://localhost:44315/api/collections\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getProducts() {\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    getProduct(id: number) {\r\n        return this.http.get(this.url + '/' + id);\r\n    }\r\n\r\n    createProduct(product: Product) {\r\n        return this.http.post(this.url, product);\r\n    }\r\n    updateProduct(product: Product) {\r\n\r\n        return this.http.put(this.url, product);\r\n    }\r\n    deleteProduct(id: number) {\r\n        return this.http.delete(this.url + '/' + id);\r\n    }\r\n}","export class Product {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public company?: string,\r\n        public price?: number) { }\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"],"sourceRoot":"webpack:///"}