{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data.service.ts","webpack:///src/app/product.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dataService","product","tableMode","loadProducts","getProducts","subscribe","data","products","createProduct","push","updateProduct","cancel","p","deleteProduct","add","selector","templateUrl","providers","AppModule","imports","declarations","bootstrap","DataService","http","url","get","post","put","Product","name","company","price","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Product } from './product';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    providers: [DataService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    product: Product = new Product();   \r\n    products: Product[];                \r\n    tableMode: boolean = true;          \r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadProducts();     \r\n    }\r\n    loadProducts() {\r\n        this.dataService.getProducts()\r\n            .subscribe((data: Product[]) => this.products = data);\r\n    }\r\n    save() {\r\n        if (this.product.id == null) {\r\n            this.dataService.createProduct(this.product)\r\n                .subscribe((data: Product) => this.products.push(data));\r\n        } else {\r\n            this.dataService.updateProduct(this.product)\r\n                .subscribe(data => this.loadProducts());\r\n        }\r\n        this.cancel();\r\n    }\r\n    editProduct(p: Product) {\r\n        this.product = p;\r\n    }\r\n    cancel() {\r\n        this.product = new Product();\r\n        this.tableMode = true;\r\n    }\r\n    delete(p: Product) {\r\n        this.dataService.deleteProduct(p.id)\r\n            .subscribe(data => this.loadProducts());\r\n    }\r\n    add() {\r\n        this.cancel();\r\n        this.tableMode = false;\r\n    }\r\n}","<h1>Список моделей</h1>\r\n<input type=\"button\" value=\"Добавить\" class=\"btn btn-default\" (click)=\"add()\" />\r\n<table *ngIf=\"tableMode; else create\" class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>Модель</td>\r\n            <td>Производитель</td>\r\n            <td>Цена</td>\r\n            <td></td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let p of products\">\r\n            <ng-template [ngIf]=\"product?.id != p.id\" [ngIfElse]=\"edit\">\r\n                <td>{{p?.name}}</td>\r\n                <td>{{p?.company}}</td>\r\n                <td>{{p?.price}}</td>\r\n                <td>\r\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"editProduct(p)\">Изменить</button>\r\n                    <button class=\"btn btn-sm btn-danger\" (click)=\"delete(p)\">Удалить</button>\r\n                </td>\r\n            </ng-template>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<ng-template #edit>\r\n    <td>\r\n        <input type=\"text\" [(ngModel)]=\"product.name\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"text\" [(ngModel)]=\"product.company\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"number\" [(ngModel)]=\"product.price\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-sm btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-sm btn-warning\" />\r\n    </td>\r\n</ng-template>\r\n\r\n<ng-template #create>\r\n    <div class=\"form-group\">\r\n        <label>Модель</label>\r\n        <input type=\"text\" [(ngModel)]=\"product.name\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Производитель</label>\r\n        <input type=\"text\" [(ngModel)]=\"product.company\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Цена</label>\r\n        <input type=\"number\" [(ngModel)]=\"product.price\" class=\"form-control\" />\r\n    </div>\r\n    <div>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-warning\" />\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, HttpClientModule],\r\n    declarations: [AppComponent],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from './product';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    private url = \"https://localhost:44315/api/collections\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getProducts() {\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    getProduct(id: number) {\r\n        return this.http.get(this.url + '/' + id);\r\n    }\r\n\r\n    createProduct(product: Product) {\r\n        return this.http.post(this.url, product);\r\n    }\r\n    updateProduct(product: Product) {\r\n\r\n        return this.http.put(this.url, product);\r\n    }\r\n    deleteProduct(id: number) {\r\n        return this.http.delete(this.url + '/' + id);\r\n    }\r\n}","export class Product {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public company?: string,\r\n        public price?: number) { }\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}